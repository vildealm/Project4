{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport \"reflect-metadata\";\nimport { importSchema } from \"graphql-import\";\nimport { GraphQLServer } from \"graphql-yoga\";\nimport { createConnection } from \"typeorm\";\nimport * as path from \"path\";\nimport { resolvers } from \"./resolvers\";\nexport var startServer = function startServer() {\n  var typeDefs, server;\n  return _regeneratorRuntime.async(function startServer$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          typeDefs = importSchema(path.join(__dirname, \"./schema.graphql\"));\n          server = new GraphQLServer({\n            typeDefs: typeDefs,\n            resolvers: resolvers\n          });\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(createConnection());\n\n        case 4:\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(server.start());\n\n        case 6:\n          console.log(\"Server is running on localhost:4000\");\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nstartServer();","map":{"version":3,"sources":["/Users/bbswensson/Documents/Webdev/project4-2/backend/src/index.ts"],"names":["importSchema","GraphQLServer","createConnection","path","resolvers","startServer","typeDefs","join","__dirname","server","start","console","log"],"mappings":";AAAA,OAAO,kBAAP;AACA,SAASA,YAAT,QAA6B,gBAA7B;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,gBAAT,QAAiC,SAAjC;AACA,OAAO,KAAKC,IAAZ,MAAsB,MAAtB;AACA,SAASC,SAAT;AAGA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBC,UAAAA,QADmB,GACRN,YAAY,CAACG,IAAI,CAACI,IAAL,CAAUC,SAAV,EAAqB,kBAArB,CAAD,CADJ;AAEnBC,UAAAA,MAFmB,GAEV,IAAIR,aAAJ,CAAkB;AAAEK,YAAAA,QAAQ,EAARA,QAAF;AAAYF,YAAAA,SAAS,EAATA;AAAZ,WAAlB,CAFU;AAAA;AAAA,2CAGnBF,gBAAgB,EAHG;;AAAA;AAAA;AAAA,2CAInBO,MAAM,CAACC,KAAP,EAJmB;;AAAA;AAKzBC,UAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;;AALyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;AAQPP,WAAW","sourcesContent":["import \"reflect-metadata\";\nimport { importSchema } from \"graphql-import\";\nimport { GraphQLServer } from \"graphql-yoga\";\nimport { createConnection } from \"typeorm\";\nimport * as path from \"path\";\nimport { resolvers } from \"./resolvers\";\n\n\nexport const startServer = async () => {\n  const typeDefs = importSchema(path.join(__dirname, \"./schema.graphql\"));\n  const server = new GraphQLServer({ typeDefs, resolvers });\n  await createConnection();\n  await server.start();\n  console.log(\"Server is running on localhost:4000\");\n}\n\nstartServer();\n"]},"metadata":{},"sourceType":"module"}